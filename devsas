
%macro encode_and_test_connection(userid, password, pwfile, dbpath);

    /* Encode the password */
    filename pwtemp temp;
    proc pwencode in="&password" out=pwtemp;
    run;

    data _null_;
        infile pwtemp truncover;
        input encoded_password $char50.;
        run;

    filename pwtemp clear;

    /* Check if the user exists and update or append */
    data pwdata;
        length userID $20 encoded_password $50;
        retain userID encoded_password;
        set pwdata end=eof (in=in1) _null_ (in=in2);
        if in1 then output;
        else if in2 and eof then do;
            userID = "&userid";
            output;
        end;
    run;

    /* Write back to pwfile */
    proc export data=pwdata outfile="&pwfile" dbms=dlm replace;
        delimiter=' ';
    run;

    /* Attempt to assign a library using the encoded password */
    libname testlib "&dbpath" user=&userid pw=encoded_password;

    /* Check if the library assignment was successful */
    %if %sysfunc(libref(testlib)) = 0 %then %do;
        %put Connection for &userid was successful!;
    %end;
    %else %do;
        %put Connection for &userid failed!;
    %end;

    /* Clear the library reference */
    libname testlib clear;

%mend;

/* Specify the path to the output file */
%let outfile = /path/to/pwfile.txt;

/* Set up the pwdata if it doesn't exist */
data pwdata;
    length userID $20 encoded_password $50;
    stop;
run;

/* Use the macro */
%encode_and_test_connection(user1, password1, &outfile, /path/to/db1);
%encode_and_test_connection(user2, password2, &outfile, /path/to/db2);
